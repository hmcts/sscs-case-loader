plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.4.RELEASE'
  id 'org.springframework.boot' version '1.5.10.RELEASE'
  id 'org.owasp.dependencycheck' version '3.1.1'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id 'net.ltgt.apt' version '0.14'
  id 'org.sonarqube' version '2.6.2'
  id "com.gorylenko.gradle-git-properties" version "1.4.21"
}

group = 'uk.gov.hmcts.reform'
version = '1.0.0'

sourceCompatibility = 1.8
compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
  options.compilerArgs << '-Xlint:deprecation'
}

targetCompatibility = 1.8

mainClassName = 'uk.gov.hmcts.reform.sscs.CaseLoaderApp'


checkstyle {
  maxWarnings = 0
  toolVersion = '8.8'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "5.8.1"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}


sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir('src/IntegrationTests/java')
    }
  }
  e2e {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir('src/e2e/java')
    }
  }
}

dependencies {
  integrationTestCompile(sourceSets.test.output)
  e2eCompile(sourceSets.test.output)
}

task functional(type: Test) {
  setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)
  setClasspath(sourceSets.integrationTest.runtimeClasspath)
}

jacoco {
  toolVersion = "0.8.1"
}

jacocoTestReport {
  executionData(test, functional)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

repositories {
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }


  jcenter()
}


project.tasks['sonarqube'].dependsOn test, functional
check.dependsOn functional
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
functional.shouldRunAfter(checkstyleIntegrationTest)
functional.shouldRunAfter(test)

sonarqube {
  properties {
    property "sonar.projectName", "SSCS - Case loader"
    property "sonar.projectKey", "SSCSCL"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/functional.exec"
    property "sonar.exclusions", "**/sscs/models/**, **/sscs/CaseLoaderApp.java"

  }
}


configurations {
  integrationTestCompile.extendsFrom(testCompile)
  integrationTestRuntime.extendsFrom(testRuntime)
  e2eRuntime.extendsFrom(testRuntime)
  e2eCompile.extendsFrom(testCompile)
}

bootRun {
  systemProperty 'server.port', '8082'
}

def springBootVersion = '1.5.10.RELEASE'

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
  }
}

def versions = [
  logback: '1.2.3',
  reformLogging: '2.0.2',
  springBoot: springBootVersion,
  springHystrix: '1.4.2.RELEASE',
  springfoxSwagger: '2.8.0'
]


dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot

  compile group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
  compile group: 'ch.qos.logback', name: 'logback-core', version: versions.logback

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: versions.springHystrix
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard', version: versions.springHystrix

  compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.2.RELEASE'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version: '1.1.0'
  compile group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '2.5.0'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '0.4.2'

  compile group: 'com.jcraft', name: 'jsch', version: '0.1.54'

  compile group: 'org.json', name: 'json', version: '20171018'

  compile group: 'commons-io', name: 'commons-io', version: '2.6'
  compile group: 'com.opencsv', name: 'opencsv', version: '4.1'

  compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names'
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8'
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
  compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'

  compileOnly 'org.projectlombok:lombok:1.16.20'
  apt "org.projectlombok:lombok:1.16.20"

  testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: '1.28.2'
  testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '1.28.2'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  testCompile 'pl.pragmatists:JUnitParams:1.1.1'
}

jar {
  archiveName 'sscs-case-loader.jar'
  manifest {
    attributes 'Implementation-Title': project.name,
      'Implementation-Version': project.version
  }
}

run {
  def debug = System.getProperty("debug")
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}

task smoke(type: Test) {
  group = 'verification'
  description = 'Executes non-destructive smoke tests against a running case loader'
  setTestClassesDirs(sourceSets.e2e.output.classesDirs)
  setClasspath(sourceSets.e2e.runtimeClasspath)
  include "uk/gov/hmcts/reform/sscs/smoke/**"
  exclude "uk/gov/hmcts/reform/sscs/functional/**"
}
