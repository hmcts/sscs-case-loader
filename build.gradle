plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id "io.spring.dependency-management" version "1.1.4"
  id 'org.springframework.boot' version '2.7.18'
  id 'uk.gov.hmcts.java' version '0.12.43'
  id 'com.github.ben-manes.versions' version '0.46.0'
  id 'org.sonarqube' version '4.3.0.3225'
  id 'org.owasp.dependencycheck' version '10.0.3'
  id "com.gorylenko.gradle-git-properties" version "2.4.1"
  id "io.freefair.lombok" version "8.1.0"
}

group = 'uk.gov.hmcts.reform'
version = '1.0.0'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror" << "-Xlint:deprecation"
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
  useJUnitPlatform()
}

application {
  mainClass.set('uk.gov.hmcts.reform.sscs.CaseLoaderApp')

  // this is required to force Java running on the Azure Windows Server OS into using
  // UTF-8 as the default character set instead of windows-1252 which causes issues
  applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir('src/IntegrationTests/java')
    }
  }
  e2e {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir('src/e2e/java')
    }
    resources {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir('src/e2e/resources')
    }
  }
}

tasks.register('integration', Test) {
  setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)
  setClasspath(sourceSets.integrationTest.runtimeClasspath)
}

tasks.register('functionalPreDeploy', Test) {
  group = 'Functional Tests'
  description = 'Place delta files on the sftp server ready to be consumed when AKS job is created'
  setTestClassesDirs(sourceSets.e2e.output.classesDirs)
  setClasspath(sourceSets.e2e.runtimeClasspath)
  include "uk/gov/hmcts/reform/sscs/functional/predeploy/**"
  exclude "uk/gov/hmcts/reform/sscs/functional/postdeploy/**"
}

tasks.register('functionalPostDeploy', Test) {
  group = 'Functional Tests'
  description = 'Verifies that files from functionPreDeploy step were processed following job creation in AKS'
  setTestClassesDirs(sourceSets.e2e.output.classesDirs)
  setClasspath(sourceSets.e2e.runtimeClasspath)
  include "uk/gov/hmcts/reform/sscs/functional/postdeploy/**"
  exclude "uk/gov/hmcts/reform/sscs/functional/predeploy/**"
}

tasks.register('fortifyScan', JavaExec) {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

pmd {
  toolVersion = "6.55.0"
  ignoreFailures = true
  sourceSets = [
    sourceSets.main,
    sourceSets.test,
    sourceSets.integrationTest,
    sourceSets.e2e
  ]
  reportsDir = layout.buildDirectory.dir("reports/pmd").get().asFile
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

dependencies {
  integrationTestImplementation (sourceSets.test.output)
  e2eImplementation (sourceSets.test.output)
}

jacoco {
  toolVersion = "0.8.8"
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.getRequired().set(true)
    csv.getRequired().set(false)
    xml.outputLocation = layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 7-10 fails the build, anything lower and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 7.0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
  nvd.validForHours = 4 // on Jenkins we have 24, so if you get more vulnerabilities locally, try to normalize this value with Jenkins

  analyzers {
    retirejs {
      enabled = false
    }
    ossIndex {
      enabled = false
    }
  }
}

repositories {
  mavenLocal()

  mavenCentral()

  maven {
    url 'https://repo.spring.io/libs-milestone'
  }

  // jitpack should be last resort
  // see: https://github.com/jitpack/jitpack.io/issues/1939
  maven { url 'https://jitpack.io' }
}

tasks.withType(Copy).configureEach { duplicatesStrategy DuplicatesStrategy.WARN }

project.tasks.named('sonarqube') {
  dependsOn test, integration, jacocoTestReport
}

check.dependsOn integration
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
integration.shouldRunAfter(checkstyleIntegrationTest)
integration.shouldRunAfter(test)

sonarqube {
  properties {
    property "sonar.projectName", "SSCS - Case loader"
    property "sonar.projectKey", "SSCSCL"
    property "sonar.coverage.jacoco.xmlReportPaths", layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
    property "sonar.exclusions", "**/sscs/models/**, **/sscs/exceptions/**, **/sscs/CaseLoaderApp.java, " +
      "**/sscs/services/xml/XmlValidator.java, **/sscs/config/CaseLoaderJobConfig.java, " +
      "**/sscs/util/MigrationDataEncoderApp.java, **/sscs/services/ccd/CcdCasesSender.java, " +
      "**/sscs/services/CaseLoaderService.java"
  }
}


configurations {
  integrationTestImplementation.extendsFrom(testImplementation )
  integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
  e2eRuntimeOnly.extendsFrom(testRuntimeOnly)
  e2eImplementation.extendsFrom(testImplementation )
}

dependencyManagement {
  dependencies {
    // CVE-2022-1471
    dependency group:'org.yaml', name:'snakeyaml', version:'2.0'

    //CVE-2023-6378, CVE-2023-6481
    dependencySet(group: 'ch.qos.logback', version: '1.2.13') {
      entry 'logback-core'
      entry 'logback-classic'
    }
  }
}

dependencies {
  implementation  group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
  testImplementation  group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'org.springframework.batch', name: 'spring-batch-test'
  implementation group: 'com.h2database', name: 'h2', version: '2.2.222'

  implementation  group: 'org.unix4j', name: 'unix4j-command', version: '0.6'

  implementation  group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation  group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation  group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation  group: 'org.springframework', name: 'spring-context-support'
  implementation  ('org.springframework.cloud:spring-cloud-starter-openfeign:3.1.9')

  // https://mvnrepository.com/artifact/commons-lang/commons-lang
  implementation 'commons-lang:commons-lang:2.6'

  implementation  group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.4'

  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.0.3'
  implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.1.1'
  implementation group: 'com.github.hmcts', name: 'ccd-client', version: '4.9.2'

  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
  implementation group: 'com.github.hmcts', name: 'java-logging', version: '6.0.1'
  implementation  group: 'com.github.hmcts', name: 'sscs-common', version: '5.11.8'
  implementation 'com.github.mwiede:jsch:0.2.11'

  implementation  group: 'org.json', name: 'json', version: '20240303'

  implementation  group: 'commons-io', name: 'commons-io', version: '2.11.0'
  implementation  group: 'org.elasticsearch', name: 'elasticsearch', version: '7.17.10'

  implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
  implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'

  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
  implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor'
  implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv'
  implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names'

  testImplementation  group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: '2.28.0'
  testImplementation  group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '2.28.0'
  testImplementation  group: 'io.rest-assured', name: 'rest-assured'
  testImplementation  group: 'com.github.hmcts', name: 'fortify-client', version: '1.2.2', classifier: 'all', {
    exclude group: 'commons-io', module: 'commons-io'
  }
  implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
  integrationTestImplementation  group: 'commons-io', name: 'commons-io', version: '2.11.0'

  testImplementation  group: 'org.springframework.boot', name: 'spring-boot-starter-test'

  testImplementation  group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.10.0'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.0'
  testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.10.0'

  runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-properties-migrator'
}

bootJar {
  getArchiveFileName().set(provider {
    'sscs-case-loader.jar'
  })

  manifest {
    attributes('Implementation-Title': project.name.toString())
    attributes('Implementation-Version': project.version.toString())
  }
}

run {
  def debug = System.getProperty("debug")
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}
